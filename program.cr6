'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Methane tracer release demonstration study (2019)
'
' Copyright 2019 :: Patrick O'Keeffe,
' Laboratory for Atmospheric Research at Washington State University
'
' Contains work derived from
' TODO: Indoor Air quality (outdoor rack) code base
' https://github.com/patricktokeeffe/wheatpile-emissions-scoping
' and from Campbell Scientific CRBasic Editor documentation
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

ConstTable
  Const UTC_OFFSET = -8 'Pacific Standard Time
  Const DAYS_OF_DATA = 7
EndConstTable

'HINT edit this value using the Public table or keyboard display!
Public csat3b_azimuth 'direction sonic array is pointing wrt True North
Units csat3b_azimuth = degreesEofN


'---------- NO USER SERVICEABLE PARTS BELOW THIS LINE ;) -----------------
Public debug_on As Boolean = True

Const SETTINGS_FILE = "CPU:ch4-plume-study.dat"
Dim filehandle As Long
Dim old_azimuth

Const CSAT_SDM_ADDR = 3
Const DperR = 180/3.14159 'unit conversion
Const CSAT_VAZ = 90 'sensor-specific geometry indicator
Const MBAR_PER_TORR = 1.3332237

Const CH4_COM = ComU5
Const CH4_BAUD = 115200
Const CH4_FMT = 3 '8/n/1, RS232 logic
Const CH4_BUFF = 800

Const GPS_COM_ADDR    = ComU1  'GPS serial input port #

Dim CSATvals(5)
Alias CSATvals(1) = csat3b_Ux
Alias CSATvals(2) = csat3b_Uy
Alias CSATvals(3) = csat3b_Uz
Alias CSATvals(4) = csat3b_sonicTemp
Alias CSATvals(5) = csat3b_diag
Units CSATvals = m/s
Units csat3b_sonicTemp = degC
Units csat3b_diag = arb

Dim CSATmeta(4)
Alias CSATmeta(1) = csat3b_boardTemp
Alias CSATmeta(2) = csat3b_boardHumidity
Alias CSATmeta(3) = csat3b_inclinePitch
Alias CSATmeta(4) = csat3b_inclineRoll
Units csat3b_boardTemp = degC
Units csat3b_boardHumidity = %
Units csat3b_inclinePitch = degrees
Units csat3b_inclineRoll = degrees

Dim disable_ugga As Boolean
Dim ch4_record As String * 400
Dim ch4_year
Dim ch4(25)
'1: date (only year captured)   '2: time (only hour captured)
Alias ch4(3)  = ugga_CH4        '4: CH4 s.d.
Alias ch4(5)  = ugga_H2O        '6: H2O s.d.
Alias ch4(7)  = ugga_CO2        '8: CO2 s.d.
Alias ch4(9)  = ugga_CH4_dry    '10: CH4 dry s.d.
Alias ch4(11) = ugga_CO2_dry    '12: CO2 dry s.d.
Alias ch4(13) = ugga_gas_P      '14: gas P s.d.
Alias ch4(15) = ugga_gas_T      '16: gas T s.d.
Alias ch4(17) = ugga_self_T     '18: self T s.d.
Alias ch4(19) = ugga_ringdown0  '20: ringdown #0 s.d.
Alias ch4(21) = ugga_ringdown1  '22: ringdown #1 s.d.
Alias ch4(23) = ugga_fit_flag   '24: MIU valve
'25: MIU description
Units ugga_CH4 = ppmv
Units ugga_H2O = ppthv
Units ugga_CO2 = ppmv
Units ugga_CH4_dry = ppmv
Units ugga_CO2_dry = ppmv
Units ugga_gas_P = mbar
Units ugga_gas_T = degC
Units ugga_self_T = degC
Units ugga_ringdown0 = usec
Units ugga_ringdown1 = usec
Units ugga_fit_flag = arb

Dim nmea_sentence(2) As String * 100
Dim gps_data(15)
Alias gps_data(1) = latitude_deg              'Degrees latitude (+ = East; - = West)
Alias gps_data(2) = latitude_min              'Minutes latitude
Alias gps_data(3) = longitude_deg             'Degress longitude (+ = East; - = West)
Alias gps_data(4) = longitude_min             'Minutes longitude
Alias gps_data(5) = speed                   'Speed
Alias gps_data(6) = course                  'Course over ground
Alias gps_data(7) = mag_variation      'Magnetic variation from true north (+ = East; - = West)
Alias gps_data(8) = fix_quality             'GPS fix quality: 0 = invalid, 1 = GPS, 2 = 'differential GPS, 6 = estimated
Alias gps_data(9) = nmbr_satellites         'Number of satellites used for fix
Alias gps_data(10) = altitude               'Antenna altitude
Alias gps_data(11) = pps                    'Elapsed ms since last pulse per second (PPS) from GPS
Alias gps_data(12) = dt_since_gprmc         'Time since last GPRMC string, normally less than '1 second
Alias gps_data(13) = gps_ready              'Counts from 0 to 10, 10 = ready
Alias gps_data(14) = max_clock_change       'Maximum value the clock was changed
Alias gps_data(15) = nmbr_clock_change      'Number of times the clock was changed
Units latitude_min = degreesN
Units latitude_deg = minutesN
Units longitude_min = degreesE
Units longitude_deg = minutesE
Units speed = m/s
Units course = degreesEofN
Units mag_variation = degreesEofN
Units fix_quality = unitless
Units nmbr_satellites = unitless
Units altitude = m
Units pps = ms
Units dt_since_gprmc = s
Units gps_ready = unitless
Units max_clock_change = ms
Units nmbr_clock_change = occurrences

Dim instant_WS, instant_WD
Units instant_WS = m/s
Units instant_WD = degreesEofN
Dim work_out(3)
Alias work_out(1) = wnd_spd
Alias work_out(2) = unit_wnd_dir
Alias work_out(3) = std_wnd_dir
Units wnd_spd = m/s
Units unit_wnd_dir = degreesEofN
Units std_wnd_dir = degrees

Dim logger_batt
Units logger_batt = Vdc

Dim rtime(9) As Long
Dim OutStat As Boolean

DataTable(work,True,1)
  TableHide
  DataInterval(0,1,Min,1)
  WindVector(1,-1*csat3b_Uy,csat3b_Ux,FP2,csat3b_diag,0,1,0)
EndTable

DataTable(debug_,debug_on,1)
  Sample(1,instant_WS,IEEE4)
  Sample(1,instant_WD,IEEE4)
  'see the `tsfast` table for real-time 10hz data
  Sample(4,CSATmeta(1),IEEE4)
  Sample(1,ch4_record,String)
  Sample(25,ch4(1),IEEE4)
  Sample(1,disable_ugga,Boolean)
  Sample(2,nmea_sentence(1),String)
  Sample(15,gps_data(1),IEEE4)
  Sample(1,logger_batt,FP2)
  Sample(1,OutStat,FP2)
EndTable

DataTable(tsdata,True,-1)
  DataInterval(0,100,mSec,10)
  TableFile("CRD:ch4plume-tsdata",64,-2,0,12,Hr,OutStat,0)
  Sample(5,CSATvals(1),IEEE4)
    FieldNames("csat3b_Ux:streamwise wind (into array)," & _
               "csat3b_Uy:horizontal crosswind," & _
               "csat3b_Uz:vertical wind," & _
               "csat3b_sonicTemp:sonic (virtual) temperature," & _
               "csat3b_diag:error code")
  Sample(1,ugga_CH4,FP2)
    FieldNames("ugga_CH4:methane")
  Sample(1,ugga_H2O,IEEE4)
    FieldNames("ugga_H2O:water vapor")
  Sample(1,ugga_CO2,FP2)
    FieldNames("ugga_CO2:carbon dioxide")
  Sample(1,ugga_CH4_dry,FP2)
    FieldNames("ugga_CH4_dry:methane (dry)")
  Sample(1,ugga_CO2_dry,FP2)
    FieldNames("ugga_CO2_dry:carbon dioxide (dry)")
  Sample(1,ugga_gas_P,IEEE4)
    FieldNames("ugga_gas_P:cell press")
  Sample(1,ugga_gas_T,FP2)
    FieldNames("ugga_gas_T:cell tmpr")
  Sample(1,ugga_self_T,FP2)
    FieldNames("ugga_self_T:sensor tmpr")
  Sample(1,ugga_fit_flag,FP2)
    FieldNames("ugga_fit_flag:QC code")
  Sample(1,latitude_deg,FP2)
    FieldNames("gps_latitude_deg:position latitude degrees component")
  Sample(1,latitude_min,IEEE4)
    FieldNames("gps_latitude_min:position latitude decimal minutes component")
  Sample(1,longitude_deg,FP2)
    FieldNames("gps_longitude_deg:position longitude degrees component")
  Sample(1,longitude_min,IEEE4)
    FieldNames("gps_longitude_min:position longitude decimal minutes component")
EndTable

DataTable(stats,True,-1)
  DataInterval(0,1,Min,1)
  TableFile("CRD:ch4plume-stats",64,-2,0,12,Hr,OutStat,0)
  Median(1,mag_variation,60,FP2,mag_variation=NAN)
    FieldNames("gps_mag_variation:position magnetic variation")
  Minimum(1,gps_ready,FP2,gps_ready=NAN,0)
    FieldNames("gps_ready:status indicator (10=ready)")
  Average(1,csat3b_boardTemp,FP2,csat3b_boardTemp=NAN)
    FieldNames("csat3b_boardTemp:sonic internal temperature")
  Average(1,csat3b_boardHumidity,FP2,csat3b_boardHumidity=NAN)
    FieldNames("csat3b_boardHumidity:sonic internal humidity")
  Average(1,csat3b_inclinePitch,FP2,csat3b_inclinePitch=NAN)
    FieldNames("csat3b_inclinePitch:sonic pitch incline angle")
  Average(1,csat3b_inclineRoll,FP2,csat3b_inclineRoll=NAN)
    FieldNames("csat3b_inclineRoll:sonic roll incline angle")
  Average(1,csat3b_azimuth,FP2,csat3b_azimuth=NAN)
    FieldNames("csat3b_azimuth:sonic orientation wrt north")
  Sample(3,work_out(1),IEEE4)
    FieldNames("csat3b_wnd_spd:mean horizontal wind speed," & _
               "csat3b_unit_wnd_dir:unit vector mean wind direction," & _
               "csat3b_std_wnd_dir:wind direction stdev (Yamartino algorithm)")
  Sample(5,CSATvals(1),IEEE4)
    FieldNames("csat3b_Ux:wind vector streamwise component (into array)," & _
               "csat3b_Uy:wind vector horizontal crosswise component," & _
               "csat3b_Uz:wind vector vertical component," & _
               "csat3b_sonicTemp:ultrasonic (virtual) temperature," & _
               "csat3b_diag:sensor diagnostic word")
  Sample(1,logger_batt,FP2)
    FieldNames("logger_batt:battery")
EndTable


DisplayMenu("Plume Study", -1)
  MenuItem("CSAT azimuth", csat3b_azimuth)
'  SubMenu("View data")
    DisplayValue("CH4, ppm", ugga_CH4)
    DisplayValue("CO2, ppm", ugga_CO2)
    DisplayValue("WS, m/s", instant_WS)
    DisplayValue("WD, deg", instant_WD)
    DisplayValue("Latitude", latitude_min)
    DisplayValue("Longitude", longitude_min)
    DisplayValue("Batt, Vdc", logger_batt)
'  EndSubMenu
EndMenu

'===========================================================================
BeginProg  
  SerialOpen(CH4_COM,CH4_BAUD,CH4_FMT,0,CH4_BUFF)
  Move(ch4(1),25,NAN,1) 'ensure default "0" value isn't included
  Move(gps_data(1),15,NAN,1)
  RealTime(rtime(1)) 'for msg validation
  
  filehandle = FileOpen(SETTINGS_FILE,"rb",0) 'check for exists
  FileClose(filehandle)
  If (filehandle = 0) Then 'not found
    csat3b_azimuth = 0
  Else
    Calfile(csat3b_azimuth,1,SETTINGS_FILE,1) 'read file
  EndIf
  old_azimuth = csat3b_azimuth

  Scan(100,mSec,0,0)
    CSAT3B(CSATvals(1),0,CSAT_SDM_ADDR,0)
    CallTable(tsdata)
    CallTable(work)
    If (work.Output(1,1) ) Then
      GetRecord(work_out(1),work,1)
      unit_wnd_dir = (360 + unit_wnd_dir + csat3b_azimuth) MOD 360
    EndIf

    SerialIn(ch4_record,CH4_COM,5,&h0A,CH4_BUFF)
    If (Len(ch4_record)) Then
      SplitStr(ch4(1),ch4_record,", ",25,6)
      ch4_year = ch4(1) 'convert string->float
      'HACK!! - compare record year with logger timestamp to verify correctly parsed
      disable_ugga = NOT(ch4_year = rtime(1))
      'HINT use Round() to emulate FP2 data type
      ugga_gas_P = Round(ugga_gas_P*MBAR_PER_TORR, 1)
      ugga_H2O = Round(ugga_H2O/1000, 3) 'ppmv -> ppthv
    EndIf
  NextScan

  SlowSequence
	Scan(1,Sec,0,0)
    Battery(logger_batt)

    'alt spot for CH4

    CSAT3BMonitor(CSATmeta(1),0,CSAT_SDM_ADDR)
    instant_WS = SQR(csat3b_Ux*csat3b_Ux + csat3b_Uy*csat3b_Uy)
    instant_WD = INT(ATN2(-1*csat3b_Ux,-1*csat3b_Uy)*DperR + CSAT_VAZ + _
                     csat3b_azimuth + 360) MOD 360  

    CallTable(minutely)
    CallTable(debug_)
    
    If (old_azimuth <> csat3b_azimuth) Then
      Calfile(csat3b_azimuth,1,SETTINGS_FILE,0) 'write to file
      old_azimuth = csat3b_azimuth
    EndIf
	NextScan

  SlowSequence
  Scan(5,Sec,2,0)
    GPS (latitude_deg,GPS_COM_ADDR,UTC_OFFSET*3600,0,nmea_sentence(1))
  NextScan
EndProg


